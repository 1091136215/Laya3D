var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /**This class is automatically generated by LayaAirIDE, please do not make any modifications. */


var _GameUI = require("./script/GameUI");

var _GameUI2 = _interopRequireDefault(_GameUI);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GameConfig = function () {
    function GameConfig() {
        _classCallCheck(this, GameConfig);
    }

    _createClass(GameConfig, null, [{
        key: "init",
        value: function init() {
            //注册Script或者Runtime引用
            var reg = Laya.ClassUtils.regClass;
            reg("script/GameUI.js", _GameUI2.default);
        }
    }]);

    return GameConfig;
}();

exports.default = GameConfig;

GameConfig.width = 640;
GameConfig.height = 1136;
GameConfig.scaleMode = "fixedwidth";
GameConfig.screenMode = "none";
GameConfig.alignV = "top";
GameConfig.alignH = "left";
GameConfig.startScene = "test/TestScene.scene";
GameConfig.sceneRoot = "";
GameConfig.debug = false;
GameConfig.stat = false;
GameConfig.physicsDebug = false;
GameConfig.exportSceneToJson = true;

GameConfig.init();

},{"./script/GameUI":10}],2:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameConfig = require("./GameConfig");

var _GameConfig2 = _interopRequireDefault(_GameConfig);

var _layaMaxUI = require("./ui/layaMaxUI");

var _layaMaxUI2 = _interopRequireDefault(_layaMaxUI);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Main = function () {
	function Main() {
		_classCallCheck(this, Main);

		//根据IDE设置初始化引擎		
		if (window["Laya3D"]) Laya3D.init(_GameConfig2.default.width, _GameConfig2.default.height);else Laya.init(_GameConfig2.default.width, _GameConfig2.default.height, Laya["WebGL"]);
		Laya["Physics"] && Laya["Physics"].enable();
		Laya["DebugPanel"] && Laya["DebugPanel"].enable();
		Laya.stage.scaleMode = _GameConfig2.default.scaleMode;
		Laya.stage.screenMode = _GameConfig2.default.screenMode;
		Laya.stage.alignV = _GameConfig2.default.alignV;
		Laya.stage.alignH = _GameConfig2.default.alignH;
		//兼容微信不支持加载scene后缀场景
		Laya.URL.exportSceneToJson = _GameConfig2.default.exportSceneToJson;

		//打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
		if (_GameConfig2.default.debug || Laya.Utils.getQueryString("debug") == "true") Laya.enableDebugPanel();
		if (_GameConfig2.default.physicsDebug && Laya["PhysicsDebugDraw"]) Laya["PhysicsDebugDraw"].enable();
		if (_GameConfig2.default.stat) Laya.Stat.show();
		Laya.alertGlobalError = true;

		//激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
		Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
	}

	_createClass(Main, [{
		key: "onVersionLoaded",
		value: function onVersionLoaded() {
			//激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
			Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
		}
	}, {
		key: "onConfigLoaded",
		value: function onConfigLoaded() {
			//加载IDE指定的场景
			_GameConfig2.default.startScene && Laya.Scene.open(_GameConfig2.default.startScene);
		}
	}]);

	return Main;
}();
//激活启动类


new Main();

},{"./GameConfig":1,"./ui/layaMaxUI":14}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameMainScene = require("./GameMainScene");

var _GameMainScene2 = _interopRequireDefault(_GameMainScene);

var _Observer = require("./Observer");

var _Observer2 = _interopRequireDefault(_Observer);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CameraManager = function (_Laya$Script3D) {
    _inherits(CameraManager, _Laya$Script3D);

    function CameraManager() {
        _classCallCheck(this, CameraManager);

        var _this = _possibleConstructorReturn(this, (CameraManager.__proto__ || Object.getPrototypeOf(CameraManager)).call(this));

        _this._tempVector3 = new Laya.Vector3();
        _this.yawPitchRoll = new Laya.Vector3();
        _this.resultRotation = new Laya.Quaternion();
        _this.tempRotationZ = new Laya.Quaternion();
        _this.tempRotationX = new Laya.Quaternion();
        _this.tempRotationY = new Laya.Quaternion();
        _this.rotaionSpeed = 0.00006;
        _this.cameraDebug = true;
        //观察者
        _this.mainSceneObser = 0;
        return _this;
    }

    _createClass(CameraManager, [{
        key: "onAwake",
        value: function onAwake() {
            this.camera = this.owner;
            this.mainSceneObser = this.camera.parent.getComponent(_GameMainScene2.default).mainObserver;
            if (this.cameraDebug) {
                Laya.stage.on(Laya.Event.RIGHT_MOUSE_DOWN, this, this.mouseDown);
                Laya.stage.on(Laya.Event.RIGHT_MOUSE_UP, this, this.mouseUp);
            }
            this.mainSceneObser.watch("cameraMove", this.setPosAndRotation.bind(this));
        }
    }, {
        key: "_onDestroy",
        value: function _onDestroy() {
            //关闭监听函数
            Laya.stage.off(Laya.Event.RIGHT_MOUSE_DOWN, this, this.mouseDown);
            Laya.stage.off(Laya.Event.RIGHT_MOUSE_UP, this, this.mouseUp);
        }
    }, {
        key: "onUpdate",
        value: function onUpdate(state) {

            if (!this.cameraDebug) return;
            Laya.KeyBoardManager.hasKeyDown(37) && this.showPosAndRotation(null, 0.01, null);
            var elapsedTime = Laya.timer.delta;
            if (!isNaN(this.lastMouseX) && !isNaN(this.lastMouseY) && this.isMouseDown) {
                var scene = this.owner.scene;
                Laya.KeyBoardManager.hasKeyDown(87) && this.moveForward(-0.01 * elapsedTime); //W
                Laya.KeyBoardManager.hasKeyDown(83) && this.moveForward(0.01 * elapsedTime); //S
                Laya.KeyBoardManager.hasKeyDown(65) && this.moveRight(-0.01 * elapsedTime); //A
                Laya.KeyBoardManager.hasKeyDown(68) && this.moveRight(0.01 * elapsedTime); //D
                Laya.KeyBoardManager.hasKeyDown(81) && this.moveVertical(0.01 * elapsedTime); //Q
                Laya.KeyBoardManager.hasKeyDown(69) && this.moveVertical(-0.01 * elapsedTime); //E

                var offsetX = Laya.stage.mouseX - this.lastMouseX;
                var offsetY = Laya.stage.mouseY - this.lastMouseY;

                var yprElem = this.yawPitchRoll;
                yprElem.x -= offsetX * this.rotaionSpeed * elapsedTime;
                yprElem.y -= offsetY * this.rotaionSpeed * elapsedTime;
                this.updateRotation();
            }
            this.lastMouseX = Laya.stage.mouseX;
            this.lastMouseY = Laya.stage.mouseY;
        }
    }, {
        key: "mouseDown",
        value: function mouseDown(e) {
            if (!this.cameraDebug) return;
            //获得鼠标的旋转值
            this.camera.transform.localRotation.getYawPitchRoll(this.yawPitchRoll);
            //获得鼠标的xy值
            this.lastMouseX = Laya.stage.mouseX;
            this.lastMouseY = Laya.stage.mouseY;
            //设置bool值
            this.isMouseDown = true;
        }
    }, {
        key: "mouseUp",
        value: function mouseUp(e) {
            if (!this.cameraDebug) return;
            //设置bool值
            this.isMouseDown = false;
        }
        /**
         * 向前移动。
         */

    }, {
        key: "moveForward",
        value: function moveForward(distance) {
            this._tempVector3.x = 0;
            this._tempVector3.y = 0;
            this._tempVector3.z = distance;
            this.camera.transform.translate(this._tempVector3);
        }
        /**
         * 向右移动。
         */

    }, {
        key: "moveRight",
        value: function moveRight(distance) {
            this._tempVector3.y = 0;
            this._tempVector3.z = 0;
            this._tempVector3.x = distance;
            this.camera.transform.translate(this._tempVector3);
        }
        /**
         * 向上移动。
         */

    }, {
        key: "moveVertical",
        value: function moveVertical(distance) {
            this._tempVector3.x = this._tempVector3.z = 0;
            this._tempVector3.y = distance;
            this.camera.transform.translate(this._tempVector3, false);
        }
    }, {
        key: "updateRotation",
        value: function updateRotation() {
            Laya.Quaternion.createFromYawPitchRoll(this.yawPitchRoll.x, this.yawPitchRoll.y, this.yawPitchRoll.z, this.tempRotationZ);
            this.tempRotationZ.cloneTo(this.camera.transform.localRotation);
            this.camera.transform.localRotation = this.camera.transform.localRotation;
        }
    }, {
        key: "showPosAndRotation",
        value: function showPosAndRotation() {
            console.log("information:Position");
            console.log(this.camera.transform.position);
            console.log("information:Rotation");
            console.log(this.camera.transform.rotation);
        }
    }, {
        key: "setPosAndRotation",
        value: function setPosAndRotation(isInit, pos, rotation) {
            if (pos) {
                var posInfo = {
                    curPos: this.camera.transform.position,
                    changePos: pos
                };
                if (isInit) {
                    this.camera.transform.position = posInfo.changePos;
                } else {
                    var finalPos = new Laya.Vector3(0, 0, 0);
                    Laya.Vector3.add(posInfo.curPos, posInfo.changePos, finalPos);
                    this.camera.transform.localPosition = finalPos;
                }
            }
            if (rotation) {
                var rotationInfo = {
                    curRotation: this.camera.transform.rotation,
                    changeRotation: rotation
                };
                if (isInit) {
                    this.camera.transform.rotation = rotationInfo.changeRotation;
                } else {
                    var finalRotation = new Laya.Vector4(0, 0, 0, 0);
                    Laya.Vector4.add(rotationInfo.changeRotation, rotationInfo.curRotation, finalRotation);
                    this.camera.transform.rotation = finalRotation;
                }
            }
        }
    }, {
        key: "updateRotate",
        value: function updateRotate(k, b, z) {
            if (k && b) {
                this.camera.transform.rotate(new Laya.Vector3(k, 0, b));
            }
            if (z) {
                this.camera.transform.rotate(new Laya.Vector3(0, z, 0));
            }
        }
    }]);

    return CameraManager;
}(Laya.Script3D);

exports.default = CameraManager;

},{"./GameMainScene":8,"./Observer":13}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var CameraTransSet = function (_Laya$Script3D) {
    _inherits(CameraTransSet, _Laya$Script3D);

    function CameraTransSet() {
        _classCallCheck(this, CameraTransSet);

        return _possibleConstructorReturn(this, (CameraTransSet.__proto__ || Object.getPrototypeOf(CameraTransSet)).call(this));
        // this.startPos = new Laya.Vector3(0, -5.15, -1.19);
        // this.startRotation = new Laya.Vector4(0.03397365063332456, -0.0206223826428884, -0.854162119843573, -0.5184858546007872);
    }

    _createClass(CameraTransSet, [{
        key: "onAwake",
        value: function onAwake() {
            this.camera = this.owner;
            //  this.setPosAndRotation(true, this.startPos, this.startRotation);
        }
    }, {
        key: "setPosAndRotation",
        value: function setPosAndRotation(isInit, pos, rotation, rotate) {
            if (pos) {
                var posInfo = {
                    curPos: this.camera.transform.position,
                    changePos: pos
                };
                if (isInit) {
                    this.camera.transform.position = posInfo.changePos;
                } else {
                    var finalPos = new Laya.Vector3(0, 0, 0);
                    Laya.Vector3.add(posInfo.curPos, posInfo.changePos, finalPos);
                    this.camera.transform.position = finalPos;
                }
            }
            if (rotation) {
                var rotationInfo = {
                    curRotation: this.camera.transform.rotation,
                    changeRotation: rotation
                };
                if (isInit) {
                    this.camera.transform.rotation = rotationInfo.changeRotation;
                } else {
                    var finalRotation = new Laya.Vector4(0, 0, 0, 0);
                    Laya.Vector4.add(rotationInfo.changeRotation, rotationInfo.curRotation, finalRotation);
                    this.camera.transform.rotation = finalRotation;
                }
            }
            if (rotate) {
                this.camera.transform.rotate(rotate);
            }
        }
    }]);

    return CameraTransSet;
}(Laya.Script3D);

exports.default = CameraTransSet;

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameMainScene = require("./GameMainScene");

var _GameMainScene2 = _interopRequireDefault(_GameMainScene);

var _GamePool = require("./GamePool");

var _GamePool2 = _interopRequireDefault(_GamePool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FloorBarManager = function (_Laya$Script3D) {
    _inherits(FloorBarManager, _Laya$Script3D);

    function FloorBarManager() {
        _classCallCheck(this, FloorBarManager);

        //设定速度
        var _this = _possibleConstructorReturn(this, (FloorBarManager.__proto__ || Object.getPrototypeOf(FloorBarManager)).call(this));

        _this.rotationData = 0;
        _this.rotateVec = Laya.Vector3.ZERO;
        _this.timeInterv = 0;
        _this.rotationSpeed = 0.7;
        _this.flag = false;
        //obser
        _this.mainSceneObser = 0;
        _this.isDispose = false;
        //pool
        _this.floorBarPool = 0;
        _this.floorRecycle = 2;
        _this.trans = { pos: 0, rot: 0 };

        return _this;
    }

    _createClass(FloorBarManager, [{
        key: "onAwake",
        value: function onAwake() {
            this.gameObj = this.owner;
        }
    }, {
        key: "onStart",
        value: function onStart() {
            this.mainSceneObser.watch("gameOver", this.disPose.bind(this));
            this.mainSceneObser.watch("recycle", this.recycleObj.bind(this));
            this.trans.pos = this.gameObj.transform.position;
            this.trans.rot = this.gameObj.transform.rotation;
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            this.timeInterv = 0;
            if (this.gameObj.getChildAt(0)) {
                this.gameObj.getChildAt(0).active = false;
            }
        }
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            if (this.isDispose) return;
            if (this.gameObj.name === _GameMainScene2.default.floorBarType.abnormal && this.rotationData !== 0) {
                this.timeInterv += this.rotationSpeed;
                this.rotateVec.setValue(0, 0, this.rotationSpeed * (this.flag ? 1 : -1));
                this.gameObj.transform.rotate(this.rotateVec, true, false);
                if (this.timeInterv > this.rotationData) {
                    this.timeInterv = 0;
                    this.flag = !this.flag;
                }
            }
        }
    }, {
        key: "onDisable",
        value: function onDisable() {
            this.gameObj.transform.position = this.trans.pos;
            this.gameObj.transform.rotation = this.trans.rot;
        }
    }, {
        key: "disPose",
        value: function disPose() {
            this.isDispose = true;
        }
    }, {
        key: "recycleObj",
        value: function recycleObj(curFloorIndex) {
            if (curFloorIndex - this.floorRecycle >= 0) {
                var index = this.gameObj.parent.parent.parent.getChildIndex(this.gameObj.parent.parent);
                if (index == curFloorIndex - this.floorRecycle) {
                    if (this.gameObj.name == _GameMainScene2.default.floorBarType.abnormal || this.gameObj.name == _GameMainScene2.default.floorBarType.normal) this.floorBarPool.putItem(this.gameObj.name, this.gameObj);
                }
            }
        }
    }]);

    return FloorBarManager;
}(Laya.Script3D);

exports.default = FloorBarManager;

},{"./GameMainScene":8,"./GamePool":9}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameMainScene = require("./GameMainScene");

var _GameMainScene2 = _interopRequireDefault(_GameMainScene);

var _FloorBarManager = require("./FloorBarManager");

var _FloorBarManager2 = _interopRequireDefault(_FloorBarManager);

var _GamePool = require("./GamePool");

var _GamePool2 = _interopRequireDefault(_GamePool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FloorCreateManager = function (_Laya$Script3D) {
    _inherits(FloorCreateManager, _Laya$Script3D);

    function FloorCreateManager() {
        _classCallCheck(this, FloorCreateManager);

        //观察者
        var _this = _possibleConstructorReturn(this, (FloorCreateManager.__proto__ || Object.getPrototypeOf(FloorCreateManager)).call(this));

        _this.mainSceneObser = 0;
        //对象池
        _this.floorBarPool = _GamePool2.default.getInstance();
        //预制体数组
        _this.prefabArr = 0;
        //一次性生产Floor层数
        _this.creatLayer = 4;
        //每层之间的间隔y值
        _this.FloorInterv = 5; //8
        _this.curFloorLayerIndex = 0; //
        _this.singleFloorPos = Laya.Vector3.ZERO;
        // 装备
        _this.equipArr = 0;
        _this.spaceArr = 0;
        //静止障碍块
        _this.stillRiskMat = new Laya.PBRStandardMaterial();
        _this.normalMat = new Laya.PBRStandardMaterial();
        _this.stillRiskScale = new Laya.Vector3(1.01, 1.01, 1.01);
        //移动障碍
        _this.moveRiskScale = new Laya.Vector3(1.005, 1.005, 1.005);
        //
        _this.equipStarRotation = new Laya.Vector4(0, 0, 0, -1);
        return _this;
    }

    _createClass(FloorCreateManager, [{
        key: "onAwake",
        value: function onAwake() {
            this.gameObj = this.owner;
            this.mainSceneObser = this.gameObj.parent.getComponent(_GameMainScene2.default).mainObserver;
            this.mainSceneObser.watch("creatFloor", this.floorInit.bind(this));
            this.stillRiskMat.albedoColor = new Laya.Vector4(1, 0, 0, 1); //红色
        }
    }, {
        key: "onStart",
        value: function onStart() {
            //隐藏预制体
            for (var key in this.prefabArr) {
                this.prefabArr[key].active = false;
            }
            this.equipArr = this.prefabArr.concat();
            this.equipArr.splice(0, 1);
            this.floorInit(this.creatLayer);
        }
        //初始化

    }, {
        key: "floorInit",
        value: function floorInit(num) {
            //当前层数
            var floorIndex = 0;
            while (floorIndex < num) {
                //一层的总Floor
                var singleFloor = new Laya.Sprite3D();
                var randomData = this.getRandomData(); //获取的json数据
                var baseBlock = this.createBaseBlock(randomData);
                var spBlock = this.creatSPBlock(randomData);
                singleFloor.addChild(baseBlock);
                singleFloor.addChild(spBlock);
                this.singleFloorPos.setValue(0, -this.curFloorLayerIndex * this.FloorInterv, 0);
                singleFloor.transform.translate(this.singleFloorPos, true);
                floorIndex++;
                this.curFloorLayerIndex++;
                this.gameObj.addChild(singleFloor);
            }
        }
        /**获取随机数据 */

    }, {
        key: "getRandomData",
        value: function getRandomData() {
            var jsonData = Laya.loader.getRes("res/KHXM.json");
            var jsonArr = Object.keys(jsonData).map(function (key) {
                return jsonData[key];
            });
            var randomIndex = Math.floor(Math.random() * jsonArr.length);
            return jsonArr[randomIndex];
        }
    }, {
        key: "createBaseBlock",
        value: function createBaseBlock(randomData) {
            var baseBlockObjs = new Laya.Sprite3D();
            this.spaceArr = [];
            var floorClone = void 0;
            for (var j = 0; j < randomData.base_block.length; j++) {
                var obj = randomData.base_block[j];
                if (obj) {
                    floorClone = this.CloneObj(this.prefabArr[0], baseBlockObjs, _GameMainScene2.default.floorBarType.normal);
                    if (!floorClone.getComponent(_FloorBarManager2.default)) {
                        floorClone.addComponent(_FloorBarManager2.default);
                        floorClone.getComponent(_FloorBarManager2.default).mainSceneObser = this.mainSceneObser;
                        floorClone.getComponent(_FloorBarManager2.default).floorBarPool = this.floorBarPool;
                    }
                    floorClone.meshRenderer.material = this.normalMat;
                    if (obj === 2) {
                        floorClone.name = _GameMainScene2.default.floorBarType.stillObstacle;
                        //floorClone材质设置
                        floorClone.meshRenderer.material = this.stillRiskMat;
                        floorClone.transform.localScale = this.stillRiskScale;
                    }
                    //反转//todo
                    //位置调整
                    floorClone.transform.rotate(new Laya.Vector3(0, 0, j * 22.5), true, false);
                    floorClone.active = true;
                } else {
                    this.spaceArr.push(j);
                }
            }
            //随机添加道具
            if (this.creatEquipChance(1)) {
                //每一层出现道具的几率
                var ranEquip = this.ranElement(this.equipArr);
                var equipClone = this.CloneObj(ranEquip, baseBlockObjs, ranEquip.name);
                //随机位置
                var randomPos = this.ranElement(this.spaceArr);
                equipClone.transform.rotate(new Laya.Vector3(0, randomPos * 22.5, 0), true, false);
                equipClone.active = true;
            }
            return baseBlockObjs;
        }
    }, {
        key: "creatSPBlock",
        value: function creatSPBlock(randomData) {
            var spBlockObjs = new Laya.Sprite3D();
            for (var j = 0; j < randomData.sp_block_size.length; j++) {
                var obj = randomData.sp_block_size[j];
                if (obj) {
                    var num = 0;
                    while (num < obj) {
                        var floorClone = this.CloneObj(this.prefabArr[0], spBlockObjs, _GameMainScene2.default.floorBarType.abnormal);
                        if (!floorClone.getComponent(_FloorBarManager2.default)) {
                            floorClone.addComponent(_FloorBarManager2.default);
                            floorClone.getComponent(_FloorBarManager2.default).mainSceneObser = this.mainSceneObser;
                            floorClone.getComponent(_FloorBarManager2.default).floorBarPool = this.floorBarPool;
                            //添加标签
                            floorClone.name = _GameMainScene2.default.floorBarType.abnormal;
                            //floorClone材质设置
                            floorClone.meshRenderer.material = this.stillRiskMat;
                            floorClone.transform.localScale = this.moveRiskScale;
                        }
                        //速度
                        floorClone.getComponent(_FloorBarManager2.default).rotationData = randomData.sp_block_move_speed[j];
                        //起始位置
                        floorClone.transform.rotate(new Laya.Vector3(0, 0, num * 22.5 + randomData.sp_block_start_pos[j] * 22.5), true, false);
                        //反转 todo
                        floorClone.active = true;
                        num++;
                    }
                }
                return spBlockObjs;
            }
        }
    }, {
        key: "CloneObj",
        value: function CloneObj(moudle, parent, name) {
            var doTrans = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;

            var clone = this.floorBarPool.getItem(name);
            if (clone) {
                // if (!parent.getChildByName(clone.name)) {
                parent.addChild(clone);
            } else {
                clone = Laya.Sprite3D.instantiate(moudle, parent, false);
                clone.name = name;
            }
            if (doTrans) {
                clone.transform.position = moudle.transform.position;
                clone.transform.rotation = moudle.transform.rotation;
            }

            return clone;
        }
    }, {
        key: "ranElement",
        value: function ranElement(arr) {
            var randomIndex = Math.floor(Math.random() * arr.length);
            return arr[randomIndex];
        }
        //euqip creat probability

    }, {
        key: "creatEquipChance",
        value: function creatEquipChance(pro) {
            return Math.random() < pro;
        }
    }]);

    return FloorCreateManager;
}(Laya.Script3D);

exports.default = FloorCreateManager;

},{"./FloorBarManager":5,"./GameMainScene":8,"./GamePool":9}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameMainScene = require("./GameMainScene");

var _GameMainScene2 = _interopRequireDefault(_GameMainScene);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var FloorMoveManager = function (_Laya$Script3D) {
    _inherits(FloorMoveManager, _Laya$Script3D);

    function FloorMoveManager() {
        _classCallCheck(this, FloorMoveManager);

        var _this = _possibleConstructorReturn(this, (FloorMoveManager.__proto__ || Object.getPrototypeOf(FloorMoveManager)).call(this));

        _this.yawPitchRoll = new Laya.Vector3();
        _this.tempRotationZ = new Laya.Quaternion();
        _this.rotaionSpeed = 0.0005;
        //obser
        _this.mainSceneObser = 0;
        _this.isDispose = false;
        return _this;
    }

    _createClass(FloorMoveManager, [{
        key: "onAwake",
        value: function onAwake() {
            Laya.stage.on(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
            Laya.stage.on(Laya.Event.MOUSE_UP, this, this.mouseUp);
            this.gameObj = this.owner;
            this.mainSceneObser = this.gameObj.parent.getComponent(_GameMainScene2.default).mainObserver;
            this.mainSceneObser.watch("gameOver", this.disPose.bind(this));
        }
    }, {
        key: "_onDestroy",
        value: function _onDestroy() {
            //关闭监听函数
            Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
            Laya.stage.off(Laya.Event.MOUSE_UP, this, this.mouseUp);
        }
    }, {
        key: "onUpdate",
        value: function onUpdate(state) {
            if (this.isDispose) return;
            var elapsedTime = Laya.timer.delta;
            if (!isNaN(this.lastMouseX) && this.isMouseDown) {
                var offsetX = Laya.stage.mouseX - this.lastMouseX;
                var yprElem = this.yawPitchRoll;
                yprElem.x += offsetX * this.rotaionSpeed * elapsedTime;
                this.updateRotate(offsetX * this.rotaionSpeed * elapsedTime);
            }
            this.lastMouseX = Laya.stage.mouseX;
        }
    }, {
        key: "mouseDown",
        value: function mouseDown(e) {
            //获得鼠标的旋转值
            this.gameObj.transform.localRotation.getYawPitchRoll(this.yawPitchRoll);
            //获得鼠标的x值
            this.lastMouseX = Laya.stage.mouseX;
            //设置bool值
            this.isMouseDown = true;
        }
    }, {
        key: "mouseUp",
        value: function mouseUp(e) {
            //设置bool值
            this.isMouseDown = false;
        }
    }, {
        key: "updateRotate",
        value: function updateRotate(k) {
            this.gameObj.transform.rotate(new Laya.Vector3(0, k, 0));
        }
    }, {
        key: "disPose",
        value: function disPose() {
            Laya.stage.off(Laya.Event.MOUSE_DOWN, this, this.mouseDown);
            Laya.stage.off(Laya.Event.MOUSE_UP, this, this.mouseUp);
            this.isDispose = true;
        }
    }]);

    return FloorMoveManager;
}(Laya.Script3D);

exports.default = FloorMoveManager;

},{"./GameMainScene":8}],8:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _ManManager = require("./ManManager");

var _ManManager2 = _interopRequireDefault(_ManManager);

var _FloorMoveManager = require("./FloorMoveManager");

var _FloorMoveManager2 = _interopRequireDefault(_FloorMoveManager);

var _FloorCreateManager = require("./FloorCreateManager");

var _FloorCreateManager2 = _interopRequireDefault(_FloorCreateManager);

var _CameraManager = require("./CameraManager");

var _CameraManager2 = _interopRequireDefault(_CameraManager);

var _Observer = require("./Observer");

var _Observer2 = _interopRequireDefault(_Observer);

var _CameraTransSet = require("./CameraTransSet");

var _CameraTransSet2 = _interopRequireDefault(_CameraTransSet);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GameMainScene = function (_Laya$Script3D) {
    _inherits(GameMainScene, _Laya$Script3D);

    function GameMainScene() {
        _classCallCheck(this, GameMainScene);

        var _this = _possibleConstructorReturn(this, (GameMainScene.__proto__ || Object.getPrototypeOf(GameMainScene)).call(this));

        _this.mainObserver = new _Observer2.default();
        return _this;
    }

    _createClass(GameMainScene, [{
        key: "onAwake",
        value: function onAwake() {
            this.scene = this.owner;
        }
    }, {
        key: "onStart",
        value: function onStart() {
            var mainCamera = this.scene.getChildByName("Main Camera");
            //mainCamera.addComponent(CameraManager);
            //mainCamera.addComponent(CameraTransSet);
            var mainLight = this.scene.getChildByName("Directional Light");
            var doublePrefab = this.scene.getChildByName("DOUBLEMARK");
            var defence = this.scene.getChildByName("DEFENCE");
            var rocket = this.scene.getChildByName("ROCKET");
            //地板预制体
            var floorBarPrefab = this.scene.getChildByName("FloorBar");
            // //空地板预制体
            // var blankFloorPrefab = this.scene.getChildByName("BlankFloor");
            //地板容器
            var creatFloor = this.scene.getChildByName("FloorCreat");
            var prefabArr = [floorBarPrefab, doublePrefab, defence, rocket];
            creatFloor.addComponent(_FloorCreateManager2.default).prefabArr = prefabArr;
            creatFloor.addComponent(_FloorMoveManager2.default);
            //撞击特效模型
            var landColliEft = this.scene.getChildByName("LandColliEft");
            //获取小球
            var man = this.scene.getChildByName("Man");
            man.addComponent(_ManManager2.default).floorContainer = creatFloor;
            var manScript = man.getComponent(_ManManager2.default);
            manScript.camera = mainCamera;
            manScript.landColliEft = landColliEft;
        }
    }]);

    return GameMainScene;
}(Laya.Script3D);

exports.default = GameMainScene;

GameMainScene.floorBarType = {
    normal: "NORMAL",
    abnormal: "ABNORMAL",
    stillObstacle: "STILLOBSTACLE",
    doubleMark: "DOUBLEMARK",
    defence: "DEFENCE",
    rocket: "ROCKET"

};

},{"./CameraManager":3,"./CameraTransSet":4,"./FloorCreateManager":6,"./FloorMoveManager":7,"./ManManager":12,"./Observer":13}],9:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var GamePool = function () {
    function GamePool() {
        _classCallCheck(this, GamePool);

        this._pool = {};
    }

    _createClass(GamePool, [{
        key: "getItem",
        value: function getItem(key) {
            if (this._pool[key]) {
                if (this._pool[key].length) {
                    return this._pool[key].pop();
                }
            }
        }
    }, {
        key: "putItem",
        value: function putItem(key, obj) {
            obj.active = false;
            if (this._pool[key]) {
                this._pool[key].push(obj);
            } else {
                this._pool[key] = [];
                this._pool[key].push(obj);
            }
        }
    }], [{
        key: "getInstance",
        value: function getInstance() {
            if (!this._instance) {
                this._instance = new GamePool();
            }
            return this._instance;
        }
        // getPool(type) {

        // }
        // clearPool(type) {

        // }

    }]);

    return GamePool;
}();

exports.default = GamePool;

},{}],10:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameMainScene = require("./GameMainScene");

var _GameMainScene2 = _interopRequireDefault(_GameMainScene);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

/**
 * 本示例采用非脚本的方式实现，而使用继承页面基类，实现页面逻辑。在IDE里面设置场景的Runtime属性即可和场景进行关联
 * 相比脚本方式，继承式页面类，可以直接使用页面定义的属性（通过IDE内var属性定义），比如this.tipLbll，this.scoreLbl，具有代码提示效果
 * 建议：如果是页面级的逻辑，需要频繁访问页面内多个元素，使用继承式写法，如果是独立小模块，功能单一，建议用脚本方式实现，比如子弹脚本。
 */
var GameUI = function (_Laya$Scene) {
    _inherits(GameUI, _Laya$Scene);

    function GameUI() {
        _classCallCheck(this, GameUI);

        //加载场景文件
        var _this = _possibleConstructorReturn(this, (GameUI.__proto__ || Object.getPrototypeOf(GameUI)).call(this));

        _this.loadScene("test/TestScene.scene");
        var resource = [{ url: "LayaScene_SampleScene/Conventional/SampleScene.ls", type: Laya3D.HIERARCHY, priority: 1 }];
        //预加载unity场景
        Laya.loader.create(resource, Laya.Handler.create(_this, _this.onLoadFinish));
        //预加载json
        Laya.loader.load("res/KHXM.json", null, null, Laya.Loader.JSON, 0);
        Laya.Texture2D.load("res/2X_qiuti.png");
        Laya.Texture2D.load("res/fudun_qiuti.png");
        Laya.Texture2D.load("res/huojian_qiuti.png");
        return _this;
    }

    _createClass(GameUI, [{
        key: "onLoadFinish",
        value: function onLoadFinish() {
            var fightScene = Laya.Loader.getRes("LayaScene_SampleScene/Conventional/SampleScene.ls");
            Laya.stage.addChildAt(fightScene, 0);
            fightScene.addComponent(_GameMainScene2.default);
        }
    }]);

    return GameUI;
}(Laya.Scene);

exports.default = GameUI;

},{"./GameMainScene":8}],11:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GamePool = require("./GamePool");

var _GamePool2 = _interopRequireDefault(_GamePool);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var LandColliManager = function (_Laya$Script3D) {
    _inherits(LandColliManager, _Laya$Script3D);

    function LandColliManager() {
        _classCallCheck(this, LandColliManager);

        var _this = _possibleConstructorReturn(this, (LandColliManager.__proto__ || Object.getPrototypeOf(LandColliManager)).call(this));

        _this.disTime = 3;
        _this.accumtime = 0;
        _this.pool = _GamePool2.default.getInstance();
        return _this;
    }

    _createClass(LandColliManager, [{
        key: "onAwake",
        value: function onAwake() {
            this.gameObj = this.owner;
        }
    }, {
        key: "onEnable",
        value: function onEnable() {
            this.accumtime = 0;
        }
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            this.accumtime += Laya.timer.delta * 0.001;
            if (this.accumtime >= this.disTime) {
                this.pool.putItem("landTexture", this.gameObj);
            }
        }
    }]);

    return LandColliManager;
}(Laya.Script3D);

exports.default = LandColliManager;

},{"./GamePool":9}],12:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _GameMainScene = require("./GameMainScene");

var _GameMainScene2 = _interopRequireDefault(_GameMainScene);

var _FloorCreateManager = require("./FloorCreateManager");

var _FloorCreateManager2 = _interopRequireDefault(_FloorCreateManager);

var _GamePool = require("./GamePool");

var _GamePool2 = _interopRequireDefault(_GamePool);

var _Observer = require("./Observer");

var _Observer2 = _interopRequireDefault(_Observer);

var _LandColliManager = require("./LandColliManager");

var _LandColliManager2 = _interopRequireDefault(_LandColliManager);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ManManager = function (_Laya$Script3D) {
    _inherits(ManManager, _Laya$Script3D);

    function ManManager() {
        _classCallCheck(this, ManManager);

        //弹起速度
        var _this = _possibleConstructorReturn(this, (ManManager.__proto__ || Object.getPrototypeOf(ManManager)).call(this));

        _this.restiSpeed = new Laya.Vector3(0, 6, 0);
        _this.impusle = new Laya.Vector3(0, -2, 0);
        //pool
        _this.manPool = _GamePool2.default.getInstance();
        _this.manRigby = 0;
        //玩家道具
        _this.equipment = {
            defence: 0,
            speeder: 0,
            doubleMark: 0
            //场景容器
        };_this.floorContainer = 0;
        //观察者
        _this.mainSceneObser = 0;
        //相机
        _this.camera = 0;

        //玩家得分
        _this.playMark = 0;
        //单次得分值
        _this.marksetValuePer = 1;
        _this.markValuePer = 0;
        //当前层数
        _this.curFloorLayer = 0;
        //连续穿过的floor
        _this.constantSetLayer = 2;
        _this.constantFloorLayer = 0;

        //player
        _this.whiteColor = new Laya.Vector4(1, 1, 1, 1);
        _this.whiteTrail = new Laya.Vector4(0, 0.8980, 0.8271, 0.5019608);
        _this.redColor = new Laya.Vector4(1, 0, 0, 1);
        _this.redTrail = new Laya.Vector4(1, 0, 0, 1);
        //撞击特效模型
        _this.landColliEft = 0;
        _this.landColliClone = 0;
        _this.landOffest = 0.2;
        //玩家贴图
        _this.manTexture = 0;
        //玩家到相机的距离
        _this.disToCamera = 5;
        //
        _this.offestNum = 0.5;
        return _this;
    }

    _createClass(ManManager, [{
        key: "onAwake",
        value: function onAwake() {
            this.gameObj = this.owner;
            this.mainSceneObser = this.gameObj.parent.getComponent(_GameMainScene2.default).mainObserver;
        }
    }, {
        key: "onStart",
        value: function onStart() {
            this.manRigby = this.gameObj.getComponent(Laya.Rigidbody3D);
            this.manRigby.mass = 2;
            this.manRigby.linearDamping = 0.1;
            this.dampRate = 0.001;
            this.markValuePer = this.marksetValuePer;
            this.gameObj.meshRenderer.material.albedoTexture = null;
            this.manTexture = null;
        }
    }, {
        key: "onUpdate",
        value: function onUpdate() {
            if (this.camera.transform.localPositionY > this.gameObj.transform.position.y + this.disToCamera) {
                this.camera.transform.localPositionY = this.gameObj.transform.position.y + this.disToCamera;
            }
            if (this.gameObj.transform.localPositionY + this.offestNum < this.floorContainer.getChildAt(this.curFloorLayer).transform.position.y) {
                this.toNextFloor();
            }
        }
    }, {
        key: "onTriggerEnter",
        value: function onTriggerEnter(other) {
            switch (other.owner.name) {
                case _GameMainScene2.default.floorBarType.normal:
                    this.contactNormalFloor(other.owner);
                    break;
                case _GameMainScene2.default.floorBarType.stillObstacle:
                case _GameMainScene2.default.floorBarType.abnormal:
                    this.contactRiskFloor(other.owner);
                    break;
                case _GameMainScene2.default.floorBarType.doubleMark:
                case _GameMainScene2.default.floorBarType.defence:
                case _GameMainScene2.default.floorBarType.rocket:
                    // this.manPool.putItem(other.owner.name, other.owner);
                    other.owner.active = false;
                    this.GetEquipment(other.owner.name);
                    break;
                default:
                    break;
            }
        }
    }, {
        key: "contactNormalFloor",
        value: function contactNormalFloor(obj) {
            var _this2 = this;

            if (this.constantFloorLayer >= this.constantSetLayer) {
                this.startCoroutine("once", 0.2, this, function () {
                    _this2.constantFloorLayer = -1;
                    _this2.gameObj.getChildAt(0).trailRenderer.material.color = _this2.whiteTrail;
                });
                this.jumpUp(obj, 0);
                this.constantEffect(this.floorContainer.getChildAt(this.curFloorLayer));
            } else {
                this.jumpUp(obj, 1);
                this.constantFloorLayer = 0;
            }
        }
    }, {
        key: "contactRiskFloor",
        value: function contactRiskFloor(obj) {
            var _this3 = this;

            if (this.constantFloorLayer >= this.constantSetLayer) {
                this.startCoroutine("once", 0.2, this, function () {
                    _this3.constantFloorLayer = -1;
                    _this3.gameObj.getChildAt(0).trailRenderer.material.color = _this3.whiteTrail;
                });
                this.jumpUp(obj, 0);
                this.constantEffect(this.floorContainer.getChildAt(this.curFloorLayer));
            } else {
                if (this.equipment.defence || this.equipment.speeder) {
                    this.jumpUp(obj, 1);
                    return;
                }
                this.dispose();
                this.constantFloorLayer = 0;
            }
        }
    }, {
        key: "toNextFloor",
        value: function toNextFloor(obj) {
            this.mainSceneObser.notice("recycle", this.curFloorLayer);
            this.mainSceneObser.notice("creatFloor", 1);
            this.markValuePer = this.marksetValuePer;
            if (this.equipment.doubleMark) {
                this.markValuePer = 2 * this.marksetValuePer;
            }
            this.playMark += this.markValuePer;
            Laya.stage.getChildAt(1).getChildAt(0).getChildAt(0).text = "分数:" + this.playMark;
            if (!this.equipment.speeder) {
                this.constantFloorLayer++;
            }
            this.curFloorLayer++;
            //改变球颜色
            if (this.constantFloorLayer >= this.constantSetLayer) {
                this.gameObj.getChildAt(0).trailRenderer.material.color = this.redTrail;
            }
        }
        //施加速度

    }, {
        key: "manForceSet",
        value: function manForceSet(force) {
            if (this.equipment.speeder) return;
            this.manRigby.linearVelocity = force;
        }
        //撞碎一层效果

    }, {
        key: "constantEffect",
        value: function constantEffect(curFloor) {
            for (var index = 0; index < curFloor._children.length; index++) {
                for (var j = 0; j < curFloor.getChildAt(index)._children.length; j++) {
                    var element = curFloor.getChildAt(index).getChildAt(j);
                    if (element.name != _GameMainScene2.default.floorBarType.normal) {
                        element.active = false;
                    }
                    if (element) {
                        element.transform.translate(new Laya.Vector3(1, 1, 1));
                        element.transform.rotate(new Laya.Vector3(30, 40, 50), false, false);
                    }
                }
            }
        }
        //结束

    }, {
        key: "dispose",
        value: function dispose() {
            this.manRigby.isKinematic = true;
            Laya.timer.clearAll(this);
            this.gameObj.getChildAt(1).active = false;
            this.mainSceneObser.notice("gameOver");
            Laya.timer.once(2000, this, function () {
                var gameOver = Laya.stage.getChildAt(1).getChildAt(0).getChildAt(4);
                gameOver.visible = true;
            });
        }
    }, {
        key: "jumpUp",
        value: function jumpUp(obj, isShow) {
            this.manForceSet(this.restiSpeed); //反弹
            this.colliFlooreffect(obj, isShow);
        }
        //撞击地面特效

    }, {
        key: "colliFlooreffect",
        value: function colliFlooreffect(obj, isShow) {
            if (!isShow) return;
            this.landColliClone = this.CloneObj(this.landColliEft, obj, "landTexture");
            this.landColliClone.active = true;
            this.landColliClone.transform.position = this.gameObj.transform.position;
            this.landColliClone.transform.localPositionZ = obj.transform.localPositionZ + this.landOffest;
            if (!this.landColliClone.getComponent(_LandColliManager2.default)) {
                this.landColliClone.addComponent(_LandColliManager2.default);
            }
        }
        /**
         * 开启协程
         * @param {*} type: "Loop","once"
         * @param {*} interv:间隔(秒)
         * @param {*} caller:调用者
         * @param {*} callback:回调
         * @param {*} isRecover:是否覆盖协程默认true
         * @param {*} args:回调参数
         */

    }, {
        key: "startCoroutine",
        value: function startCoroutine(type, interv, caller, callback) {
            var isRecover = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;

            for (var _len = arguments.length, args = Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {
                args[_key - 5] = arguments[_key];
            }

            if (type === "loop") {
                Laya.timer.loop(interv * 1000, caller, callback, [].concat(args), isRecover);
            }
            if (type === "once") {
                Laya.timer.once(interv * 1000, caller, callback, [].concat(args), isRecover);
            }
        }
    }, {
        key: "GetEquipment",
        value: function GetEquipment(type) {
            switch (type) {
                case _GameMainScene2.default.floorBarType.doubleMark:
                    this.equipment.doubleMark = 1;
                    Laya.stage.getChildAt(1).getChildAt(0).getChildAt(1).text = "双倍:" + this.equipment.doubleMark;
                    this.gameObj.meshRenderer.material.albedoTexture = Laya.loader.getRes("res/2X_qiuti.png");
                    this.startCoroutine("once", 3, this, this.MarkDis);
                    break;
                case _GameMainScene2.default.floorBarType.defence:
                    //get defence
                    this.equipment.defence = 1;
                    Laya.stage.getChildAt(1).getChildAt(0).getChildAt(2).text = "护盾:" + this.equipment.defence;
                    this.gameObj.meshRenderer.material.albedoTexture = Laya.loader.getRes("res/fudun_qiuti.png");
                    this.startCoroutine("once", 3, this, this.DefenceDis);
                    break;
                case _GameMainScene2.default.floorBarType.rocket:
                    //speed up
                    this.equipment.speeder = 1;
                    Laya.stage.getChildAt(1).getChildAt(0).getChildAt(3).text = "火箭:" + this.equipment.speeder;
                    this.gameObj.meshRenderer.material.albedoTexture = Laya.loader.getRes("res/huojian_qiuti.png");
                    this.startCoroutine("once", 1.5, this, this.RocketDis);
                    break;
                default:
                    break;
            }
        }
    }, {
        key: "MarkDis",
        value: function MarkDis() {
            this.equipment.doubleMark = 0;
            Laya.stage.getChildAt(1).getChildAt(0).getChildAt(1).text = "双倍:" + 0;
            this.gameObj.meshRenderer.material.albedoTexture = this.manTexture;
        }
    }, {
        key: "DefenceDis",
        value: function DefenceDis() {
            this.equipment.defence = 0;
            Laya.stage.getChildAt(1).getChildAt(0).getChildAt(2).text = "护盾:" + 0;
            this.gameObj.meshRenderer.material.albedoTexture = this.manTexture;
        }
    }, {
        key: "RocketDis",
        value: function RocketDis() {
            this.equipment.speeder = 0;
            Laya.stage.getChildAt(1).getChildAt(0).getChildAt(3).text = "火箭:" + 0;
            this.gameObj.meshRenderer.material.albedoTexture = this.manTexture;
        }
        //克隆物体

    }, {
        key: "CloneObj",
        value: function CloneObj(moudle, parent, name) {
            var clone = this.manPool.getItem(name);
            if (clone) {
                parent.addChild(clone);
            } else {
                clone = Laya.Sprite3D.instantiate(moudle, parent, false);
                clone.name = name;
            }
            clone.transform.position = moudle.transform.position;
            clone.transform.rotation = moudle.transform.rotation;

            return clone;
        }
    }]);

    return ManManager;
}(Laya.Script3D);

exports.default = ManManager;

},{"./FloorCreateManager":6,"./GameMainScene":8,"./GamePool":9,"./LandColliManager":11,"./Observer":13}],13:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Observer = function () {
    function Observer() {
        _classCallCheck(this, Observer);

        this._dictionary = {};
    }

    _createClass(Observer, [{
        key: "watch",
        value: function watch(key, func) {
            if (this._dictionary[key]) {
                if (this._dictionary[key] != func) {
                    this._dictionary[key].push(func);
                }
            } else {
                this._dictionary[key] = [];
                this._dictionary[key].push(func);
            }
        }
    }, {
        key: "notice",
        value: function notice(key) {
            for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
                args[_key - 1] = arguments[_key];
            }

            for (var obj in this._dictionary[key]) {
                if (this._dictionary[key].hasOwnProperty(obj)) {
                    var _dictionary$key;

                    (_dictionary$key = this._dictionary[key])[obj].apply(_dictionary$key, args);
                }
            }
        }
    }, {
        key: "removeAllObserver",
        value: function removeAllObserver() {
            this._dictionary = {};
        }
    }, {
        key: "removeObserverByType",
        value: function removeObserverByType(type) {
            if (this._dictionary.hasKey(type)) {
                delete this._dictionary.type;
            }
        }
    }], [{
        key: "getInstance",
        value: function getInstance() {
            if (!this._instance) {
                this._instance = new Observer();
            }
            return this._instance;
        }
    }]);

    return Observer;
}();

exports.default = Observer;

},{}],14:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var CLASS$ = Laya.class;
var STATICATTR$ = Laya.static;
var View = laya.ui.View;
var Dialog = laya.ui.Dialog;
var Scene = Laya.Scene;
if (!window.ui) window.ui = {};
var TestSceneUI = function (_super) {
	function TestSceneUI() {

		TestSceneUI.__super.call(this);
	}
	CLASS$(TestSceneUI, 'ui.test.TestSceneUI', _super);
	var __proto__ = TestSceneUI.prototype;
	__proto__.createChildren = function () {
		_super.prototype.createChildren.call(this);
		this.loadScene("test/TestScene");
	};
	return TestSceneUI;
}(Scene);
exports.default = ui;

},{}]},{},[2])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
